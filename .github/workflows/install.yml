# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  workflow_call:
    inputs:
      extensions:
        required: true
        type: string
      ini-values:
        required: true
        type: string
      composer-options:
        required: true
        type: string
      skip-php-install:
        required: true
        type: boolean
      skip-npm-install:
        required: true
        type: boolean
      skip-nasm-install:
        required: false
        type: boolean
        default: true
      skip-libimagequant-install:
        required: false
        type: boolean
        default: false
      skip-librabbitmq-install:
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  install-php:
    name: "Install PHP dependencies"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: ${{ '8.4' == matrix.php-version }}

    if: inputs.skip-php-install == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-version:
          - "8.4"
          - "8.5"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "install librabbitmq-dev"
        run: "sudo apt-get install librabbitmq-dev -y"
        if: inputs.skip-librabbitmq-install == false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.33.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        if: ${{ '8.5' != matrix.php-version }}
        uses: "ramsey/composer-install@3.1.1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Update dependencies with composer"
        if: ${{ '8.5' == matrix.php-version }}
        uses: "ramsey/composer-install@3.1.1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }} --ignore-platform-reqs"

      - name: "Check dependencies with composer"
        if: ${{ '8.4' > matrix.php-version }}
        run: "composer outdated --direct"

  install-npm:
    name: "Install Node dependencies"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    # continue-on-error: ${{ '8.4' == matrix.php-version }}

    if: inputs.skip-npm-install == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        node-version:
          - "20"
          - "22.12"
          - "22.13"
          - "22.14"
          - "22.15"
          - "22.16"
          - "24.0"
          - "24.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Set up NASM (for imagemin binary builds)"
        uses: "ilammy/setup-nasm@v1"
        if: inputs.skip-nasm-install == false

      - name: "install libimagequant-dev"
        run: "sudo apt-get install libimagequant-dev -y"
        if: inputs.skip-libimagequant-install == false

      - name: "install libpng-dev"
        run: "sudo apt-get install libpng-dev -y"
        if: inputs.skip-libimagequant-install == false

      - name: "install librabbitmq-dev"
        run: "sudo apt-get install librabbitmq-dev -y"
        if: inputs.skip-librabbitmq-install == false

      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: "actions/setup-node@v4"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "install dependencies"
        run: "npm install"

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  install-status:
    name: "Install Status"

    runs-on: "ubuntu-latest"

    if: always()

    needs:
      - "install-php"
      - "install-npm"

    steps:
      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
