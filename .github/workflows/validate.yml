# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  workflow_call:
    inputs:
      extensions:
        required: false
        type: string
        default: ""
      ini-values:
        required: true
        type: string
      composer-options:
        required: true
        type: string
      skip-validate-composer:
        required: true
        type: boolean
      skip-phplint:
        required: true
        type: boolean
      skip-check-composer:
        required: true
        type: boolean
      dependency-analyser-options:
        required: false
        type: string
        default: ""

permissions:
  contents: read

jobs:
  validate-composer:
    name: "Validate composer"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-validate-composer == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Validate composer.json"
        run: "composer validate"

  validate-yaml:
    name: "Validate yaml"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run yamllint"
        uses: "actionshub/yamllint@v1.8.2"

  markdownlint:
    name: "Validate markdown files"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run markdownlint"
        uses: "DavidAnson/markdownlint-cli2-action@v16"
        with:
          globs: '*.md,**/*.md'
          separator: ','

  lint-php:
    name: "Lint PHP"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-phplint == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Lint PHP files"
        run: "find src/ -type f -name '*.php' -print0 | xargs -0 -L1 -P4 -- php -l -f"

  php-lint-overtrue:
    name: "Linting with overtrue/phplint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-phplint == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Lint PHP"
        run: |
          curl -Ls https://github.com/overtrue/phplint/releases/download/9.0.6/phplint.phar -o /usr/local/bin/phplint
          chmod +x /usr/local/bin/phplint
          /usr/local/bin/phplint -v --no-cache

  composer-normalize:
    name: "Check composer with composer-normalize"

    runs-on: "${{ matrix.operating-system }}"

    timeout-minutes: 10

    continue-on-error: false

    if: inputs.skip-validate-composer == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

        dependencies:
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, composer-normalize"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"
          debug: true

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Check composer.json"
        run: "composer-normalize --dry-run --indent-size=2 --indent-style=space"

  composer-unused:
    name: "Check composer dependencies with composer-unused"

    runs-on: "${{ matrix.operating-system }}"

    timeout-minutes: 10

    continue-on-error: false

    if: inputs.skip-check-composer == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, composer-unused"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"
          debug: true

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Check composer.json"
        run: "composer-unused unused --ansi --no-progress --no-interaction --output-format=github"

  composer-dependency-analyser:
    name: "Check composer dependencies with composer-dependency-analyser"

    runs-on: "${{ matrix.operating-system }}"

    timeout-minutes: 10

    continue-on-error: true

    if: inputs.skip-check-composer == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, composer-unused"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"
          debug: true

      - name: "Check composer.json"
        run: "composer require --no-update --no-progress --prefer-dist --prefer-stable -v --dev shipmonk/composer-dependency-analyser"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Check composer.json"
        run: "vendor/bin/composer-dependency-analyser --verbose ${{ inputs.dependency-analyser-options }}"

  editorconfig-checker:
    name: "Check with editorconfig-checker"

    runs-on: "${{ matrix.operating-system }}"

    timeout-minutes: 10

    continue-on-error: true

    if: inputs.skip-phplint == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.4"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, composer-unused"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"
          debug: true

      - name: "Update composer.json"
        run: "composer require --no-update --no-progress --prefer-dist --prefer-stable -v --dev editorconfig-checker/editorconfig-checker"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Check composer.json"
        run: "vendor/bin/ec -exclude phpmd\\.ruleset\\.xml"

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  lint-status:
    name: "Lint & Validate Status"

    runs-on: "ubuntu-22.04"

    if: always()

    needs:
      - "validate-composer"
      - "validate-yaml"
      - "markdownlint"
      - "lint-php"
      - "php-lint-overtrue"
      - "composer-normalize"
      - "composer-unused"
      - "composer-dependency-analyser"

    steps:
      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
