# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  workflow_call:
    inputs:
      extensions:
        required: false
        type: string
        default: ""
      ini-values:
        required: true
        type: string
      composer-options:
        required: true
        type: string
      skip-phpstan:
        required: true
        type: boolean
      skip-rector:
        required: true
        type: boolean
      skip-phpmd:
        required: true
        type: boolean
      phpcs-options:
        required: false
        type: string
        default: ""

permissions:
  contents: read

jobs:
  php-cs-fixer:
    name: "Check Coding Standards with PHP-CS-Fixer"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, cs2pr"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "lowest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run -vv --diff --show-progress=dots"
        continue-on-error: true

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run --show-progress=none --format=checkstyle | cs2pr"

  phpcs:
    name: "Check Coding Standards with PHPCS"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, cs2pr"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "lowest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Enable annotations for validation errors and warnings"
        uses: "korelstar/xmllint-problem-matcher@v1"

      - name: "Validate phpcs.xml"
        uses: "ChristophWurst/xmllint-action@v1"
        with:
          xml-file: "phpcs.xml"
          xml-schema-file: "vendor/squizlabs/php_codesniffer/phpcs.xsd"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs --report=checkstyle -q ${{ inputs.phpcs-options }} | cs2pr"

  static-code-analysis:
    name: "Static Code Analysis with PHPStan"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-phpstan == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "lowest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=768M --no-progress"

  phpmd:
    name: "Check Rules with PHPMD"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-phpmd == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2, phpmd"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "lowest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run phpmd/phpmd"
        run: "phpmd src github phpmd.ruleset.xml"

  rector:
    name: "Checks with Rector"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    if: inputs.skip-rector == false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-22.04"

        php-version:
          # Should use the lowest supported version
          - "8.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.30.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, curl, iconv, mbstring, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          phpts: "nts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.0.0"
        with:
          dependency-versions: "lowest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run checks with rector/rector"
        run: "vendor/bin/rector process --ansi --dry-run"
        continue-on-error: true

      - name: "Run checks with rector/rector"
        run: "vendor/bin/rector process --ansi --dry-run --no-diffs"

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  analytics-status:
    name: "Status Analytics"

    runs-on: "ubuntu-22.04"

    if: always()

    needs:
      - "php-cs-fixer"
      - "phpcs"
      - "static-code-analysis"
      - "phpmd"
      - "rector"

    steps:
      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
